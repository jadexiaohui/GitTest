par(mfrow = c(1,2))
hist(hat_theta, nclass = 50, freq = F)
inv_I_theta = 2/ n
curve(dnorm(x = x, mean = theta, sd = sqrt(inv_I_theta)), add = T, col = 2, lwd = 2)
qqnorm(y = hat_theta, frame = F, pch = 1)
qqline(y = hat_theta, col = 2, lwd = 2)
inv_I0_theta = sapply(1:n_rep, function(index)
1 / (2 * sum((1 - (data_cauchy[index,] - hat_theta[index])^2) /
((1 + (data_cauchy[index,] - hat_theta[index])^2))^2)))
print("---------------------")
print(paste0("Mean of hat theta: ", round(mean(hat_theta), digits = 4)))
print(paste0("Mean of variance theta: ", round(var(hat_theta), digits = 4)))
print(paste0("Mean of n * variance theta: ", round(n* var(hat_theta), digits = 4)))
print(paste0("coverage (exp. information): ",
round(mean(hat_theta-1.96*sqrt(inv_I_theta) < theta &
theta < hat_theta+1.96*sqrt(inv_I_theta)), digits = 4)))
print(paste0("coverage (obs. information): ",
round(mean(hat_theta-1.96*sqrt(inv_I0_theta) < theta &
theta < hat_theta+1.96*sqrt(inv_I0_theta)), digits = 4)))
print("---------------------")
}
theta = 10
n = 10
n_rep = 10000
run_simulations_cauchy(theta, n, n_rep)
run_simulations_geometric = function (theta, n, n_rep) {
data_geom = matrix(rgeom(n = n * n_rep, p = theta) + 1)
llikc = function(pars, data){
out = -sum(dgeom(x = data, location = pars, scale = 1, log = T))
return(out)
}
hat_theta = apply(data_geom, 1, function(x)
optim(par = 1, fn = llikc, data = x, method="BFGS")$par)
par(mfrow = c(2,2))
hist(hat_theta, nclass = 50, freq = F)
inv_I_theta = (theta ^ 2 * (1 - theta)) / n
curve(dnorm(x = x, mean = theta, sd = sqrt(inv_I_theta)), add = T, col = 2, lwd = 2)
qqnorm(y = hat_theta, frame = F, pch = 1)
qqline(y = hat_theta, col = 2, lwd = 2)
inv_I0_theta = sapply(1:n_rep, function(index)
1 / (2 * sum((1 - (data_cauchy[index,] - hat_theta[index])^2) /
((1 + (data_cauchy[index,] - hat_theta[index])^2))^2)))
print("---------------------")
print(paste0("Mean of hat theta: ", round(mean(hat_theta), digits = 4)))
print(paste0("Mean of variance theta: ", round(var(hat_theta), digits = 4)))
print(paste0("Mean of n * variance theta: ", round(n* var(hat_theta), digits = 4)))
print(paste0("coverage (exp. information): ",
round(mean(hat_theta-1.96*sqrt(inv_I_theta) < theta &
theta < hat_theta+1.96*sqrt(inv_I_theta)), digits = 4)))
print(paste0("coverage (obs. information): ",
round(mean(hat_theta-1.96*sqrt(inv_I0_theta) < theta &
theta < hat_theta+1.96*sqrt(inv_I0_theta)), digits = 4)))
print("---------------------")
}
run_simulations_geometric(theta, n , n_rep)
?help(dgeom)
?degeom
help(dgeom)
help(rgeom)
run_simulations_geometric(theta, n , n_rep)
data_geom = matrix(rgeom(n = n * n_rep, p = theta) + 1, ncol = n)
data_geom = matrix((rgeom(n = n * n_rep, p = theta) + 1), ncol = n)
help(rcauchy)
help(rgeom)
theta = 0.1
n = 10
n_rep = 10000
run_simulations_geometric = function (theta, n, n_rep) {
data_geom = matrix(rgeom(n = n * n_rep, p = theta) + 1, ncol = n)
llikc = function(pars, data){
out = -sum(dgeom(x = data, location = pars, scale = 1, log = T))
return(out)
}
hat_theta = apply(data_geom, 1, function(x)
optim(par = 1, fn = llikc, data = x, method="BFGS")$par)
par(mfrow = c(2,2))
hist(hat_theta, nclass = 50, freq = F)
inv_I_theta = (theta ^ 2 * (1 - theta)) / n
curve(dnorm(x = x, mean = theta, sd = sqrt(inv_I_theta)), add = T, col = 2, lwd = 2)
qqnorm(y = hat_theta, frame = F, pch = 1)
qqline(y = hat_theta, col = 2, lwd = 2)
inv_I0_theta = sapply(1:n_rep, function(index)
1 / (2 * sum((1 - (data_cauchy[index,] - hat_theta[index])^2) /
((1 + (data_cauchy[index,] - hat_theta[index])^2))^2)))
print("---------------------")
print(paste0("Mean of hat theta: ", round(mean(hat_theta), digits = 4)))
print(paste0("Mean of variance theta: ", round(var(hat_theta), digits = 4)))
print(paste0("Mean of n * variance theta: ", round(n* var(hat_theta), digits = 4)))
print(paste0("coverage (exp. information): ",
round(mean(hat_theta-1.96*sqrt(inv_I_theta) < theta &
theta < hat_theta+1.96*sqrt(inv_I_theta)), digits = 4)))
print(paste0("coverage (obs. information): ",
round(mean(hat_theta-1.96*sqrt(inv_I0_theta) < theta &
theta < hat_theta+1.96*sqrt(inv_I0_theta)), digits = 4)))
print("---------------------")
}
run_simulations_geometric(theta, n , n_rep)
help(dgeom)
run_simulations_geometric(theta, n , n_rep)
run_simulations_geometric = function (theta, n, n_rep) {
data_geom = matrix(rgeom(n = n * n_rep, p = theta) + 1, ncol = n)
llikc = function(pars, data){
out = -sum(dgeom(x = data, prob = theta, log = T))
return(out)
}
hat_theta = apply(data_geom, 1, function(x)
optim(par = 1, fn = llikc, data = x, method="BFGS")$par)
par(mfrow = c(2,2))
hist(hat_theta, nclass = 50, freq = F)
inv_I_theta = (theta ^ 2 * (1 - theta)) / n
curve(dnorm(x = x, mean = theta, sd = sqrt(inv_I_theta)), add = T, col = 2, lwd = 2)
qqnorm(y = hat_theta, frame = F, pch = 1)
qqline(y = hat_theta, col = 2, lwd = 2)
inv_I0_theta = sapply(1:n_rep, function(index)
1 / (2 * sum((1 - (data_cauchy[index,] - hat_theta[index])^2) /
((1 + (data_cauchy[index,] - hat_theta[index])^2))^2)))
print("---------------------")
print(paste0("Mean of hat theta: ", round(mean(hat_theta), digits = 4)))
print(paste0("Mean of variance theta: ", round(var(hat_theta), digits = 4)))
print(paste0("Mean of n * variance theta: ", round(n* var(hat_theta), digits = 4)))
print(paste0("coverage (exp. information): ",
round(mean(hat_theta-1.96*sqrt(inv_I_theta) < theta &
theta < hat_theta+1.96*sqrt(inv_I_theta)), digits = 4)))
print(paste0("coverage (obs. information): ",
round(mean(hat_theta-1.96*sqrt(inv_I0_theta) < theta &
theta < hat_theta+1.96*sqrt(inv_I0_theta)), digits = 4)))
print("---------------------")
}
run_simulations_geometric(theta, n , n_rep)
install.packages("cars")
install.packages("car")
getwd()
LeafData = read.table("LeafData", header = TRUE)
LeafData = read.table(file = /Users/ewen/Downloads/LeafData.txt, header = TRUE)
LeafData = read.table(file = Users/ewen/Downloads/LeafData.txt, header = TRUE)
LeafData = read.table(file = '/Users/ewen/Downloads/LeafData.txt', header = TRUE)
plot(LeafData)
fit1 = lm(log_burn_time~Nitrogen, data = LeafData)
df
data = data.frame(birthrate = c(148, 167, 174, 157, 143, 190, 212, 200, 202),
year = c(1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949))
df
data = data.frame(birthrate = c(148, 167, 174, 157, 143, 190, 212, 200, 202),
year = c(1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949))
data
data = data.frame(birthrate = c(148, 167, 174, 157, 143, 190, 212, 200, 202),
year = c(1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949))
lm(data)
data = data.frame(year = c(1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949),
birthrate = c(148, 167, 174, 157, 143, 190, 212, 200, 202))
lm(data)
data
data = data.frame(birthrate = c(148, 167, 174, 157, 143, 190, 212, 200, 202),
year = c(1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949))
data
lm(data)
data1 = data.frame(birthrate = c(148, 167, 174, 157, 143, 190, 212, 200, 202),
year = c(1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949))
data
lm(formula = birthrate~year, data = data1)
data2 = data.frame(year = c(2006, 2006, 2006, 2006, 2007, 2007, 2007),
y = c(5.3, 5.3, 5.9, 6.5, 12.5, 12.6, 12.9),
x = c(6.7, 8.0, 8.5, 8.8, 9.1, 9.4, 9.5))
lm(formula = y ~ x + year, data = data2)
data2 = data.frame(year = c(2006, 2006, 2006, 2006, 2007, 2007, 2007),
y = c(5.3, 5.3, 5.9, 6.5, 12.5, 12.6, 12.9),
x = c(6.7, 8.0, 8.5, 8.8, 9.1, 9.4, 9.5))
lm(formula = y ~ x + I(year), data = data2)
lm(formula = y ~ x, data = data2)
CaulifData = read.table(file='Cauliflower.txt', header=TRUE)
data2 = data.frame(Year = c(2006, 2006, 2006, 2006, 2007, 2007, 2007),
y = c(5.3, 5.3, 5.9, 6.5, 12.5, 12.6, 12.9),
x = c(6.7, 8.0, 8.5, 8.8, 9.1, 9.4, 9.5))
str(data2)
data2$Year = as.factor(data2$Year)
str(data2)
model.matrix(fit1)
CaulifData = read.table(file='Cauliflower.txt', header=TRUE)
CaulifData = read.table(file='/Users/ewen/Downloads/Cauliflower.txt', header=TRUE)
str(CaulifData)
CaulifData$Year = as.factor(CaulifData$Year)
str(CaulifData)
model.matrix(fit1)
model.matrix(CaulifData)
CaulifData = read.table(file='/Users/ewen/Downloads/Cauliflower.txt', header=TRUE)
str(CaulifData)
CaulifData$Year = as.factor(CaulifData$Year)
str(CaulifData)
fit1 = lm(y ~ x + Year, data = CaulifData)
model.matrix(fit1)
data2 = data.frame(year = c(2006, 2006, 2006, 2006, 2007, 2007, 2007),
y = c(5.3, 5.3, 5.9, 6.5, 12.5, 12.6, 12.9),
x = c(6.7, 8.0, 8.5, 8.8, 9.1, 9.4, 9.5))
lm(formula = y ~ x + year, data = data2)
deviance = deviance(fit1)
deviance(fit1)
vcov(fit1)
deviance(fit1)
sigma = deviance(fit1)/(length(residuals) - length(coefficients(fit1)))
sigma
vcov(fit1)
fit1 = lm(y ~ x + Year, data = CaulifData)
fit1
View(CaulifData)
data2$year = as.factor(data2$year)
lm(formula = y ~ x + year, data = data2)
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.rtf", header = TRUE)
Data
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.rtf", header = TRUE)
Data
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.rtf", header = TRUE)
Data
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.rtf", header = TRUE)
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.txt", header = TRUE)
Data
plot(Data)
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.txt", header = TRUE)
barplot(Data)
barplot(Data)
barplot(Data$Item.Weight)
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.txt", header = TRUE)
barplot(Data$Quantity)
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.txt", header = TRUE)
barplot(Data$Quantity, xlab = "Weight", ylab = "Quantity")
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.txt", header = TRUE)
barplot(Data$Quantity, names = Data$ItemWeight,
xlab = "Weight", ylab = "Quantity")
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.txt", header = TRUE)
barplot(Data$Quantity, names = Data$Item.Weight,
xlab = "Weight", ylab = "Quantity")
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.txt", header = TRUE)
barplot(Data$Quantity, names = Data$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2)
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.txt", header = TRUE)
barplot(Data$Quantity, names = Data$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = 12)
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.txt", header = TRUE)
barplot(Data$Quantity, names = Data$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = "12")
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.txt", header = TRUE)
barplot(Data$Quantity, names = Data$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = 11)
Data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/Test.txt", header = TRUE)
barplot(Data$Quantity, names = Data$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = c(0,12))
View(Data)
Data1 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(1)Test0049.txt", header = TRUE)
max(Data1$Quantity)
Data2 = read.csv(read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(2)Test0014.txt", header = TRUE))
Data2 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(2)Test0014.txt", header = TRUE)
max(Data2$Quantity)
Data2 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(2)Test0014.txt", header = TRUE)
max(Data2$Quantity)
barplot(Data2$Quantity, names = Data2$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = c(0,5))
Data3 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(3)Test0082.txt", header = TRUE)
max(Data3$Quantity)
Data3 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(3)Test0082.txt", header = TRUE)
max(Data3$Quantity)
barplot(Data3$Quantity, names = Data3$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = c(0,5))
Data4 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(4)Test0044.txt", header = TRUE)
max(Data4$Quantity)
Data4 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(4)Test0044.txt", header = TRUE)
max(Data4$Quantity)
barplot(Data3$Quantity, names = Data3$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = c(0,10))
Data4 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(4)Test0044.txt", header = TRUE)
max(Data4$Quantity)
barplot(Data4$Quantity, names = Data4$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = c(0,10))
Data5 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(5)Test0030.txt", header = TRUE)
max(Data5$Quantity)
Data5 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(5)Test0030.txt", header = TRUE)
max(Data5$Quantity)
barplot(Data5$Quantity, names = Data5$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = c(0,5))
Data1 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(1)Test0049.txt", header = TRUE)
max(Data1$Quantity)
barplot(Data1$Quantity, names = Data1$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = c(0,11))
Data1 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(1)Test0049.txt", header = TRUE)
max(Data1$Quantity)
barplot(Data1$Quantity, names = Data1$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = c(0,12))
Data2 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(2)Test0014.txt", header = TRUE)
max(Data2$Quantity)
barplot(Data2$Quantity, names = Data2$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = c(0,5))
Data3 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(3)Test0082.txt", header = TRUE)
max(Data3$Quantity)
barplot(Data3$Quantity, names = Data3$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = c(0,5))
Data4 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(4)Test0044.txt", header = TRUE)
max(Data4$Quantity)
barplot(Data4$Quantity, names = Data4$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = c(0,10))
Data5 = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/AI/Coursework/(5)Test0030.txt", header = TRUE)
max(Data5$Quantity)
barplot(Data5$Quantity, names = Data5$Item.Weight,
xlab = "Weight", ylab = "Quantity", las=2,
ylim = c(0,5))
practice = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/Statistical Modelling/Coursework")
practice = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/Statistical Modelling/Coursework/PolData.txt")
practice
practice = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/Statistical Modelling/Coursework/PolData.txt")
practice = data.frame(practice)
practice
View(practice)
practice = read.table(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/Statistical Modelling/Coursework/PolData.txt")
practice = data.frame(practice)
practice
practice = read.table(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/Statistical Modelling/Coursework/PolData.txt",
header = TRUE)
practice = data.frame(practice)
practice
View(practice)
boxplot(pratice$Nox)
boxplot(mortality$Nox, data = practice)
boxplot(mortality, Nox, data = practice)
practice = read.table(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/Statistical Modelling/Coursework/PolData.txt",
header = TRUE)
practice = data.frame(practice)
practice
boxplot(practice)
boxplot(mortality, Nox, data = practice)
boxplot(practice$mortality, practice$Nox)
plot(Nox ~ mortality)
barplot(Nox ~ mortality)
boxplot(mortality ~ Nox)
practice = read.table(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/Statistical Modelling/Coursework/PolData.txt",
header = TRUE)
practice = data.frame(practice)
practice
Nitrogen = table(subset(practice, select = c(mortality, Nox)))
Sulfur = table(subset(practice, select = c(mortality, Sox)))
Water = table(subset(practice, select = c(mortality, Prec)))
Money = table(subset(practice, select = c(mortality, Income)))
boxplot(mortality ~ Nox)
plot(mortality ~ Nox)
plot(practice)
Cont = subset(practice, select = c(mortality, Nox, Sox, Prec))
plot(Cont)
practice2 = practice
practice2$Nox = log(Nox)
practice2$Nox = log(practice2$Nox)
Cont = subset(practice2, select = c(mortality, Nox, Sox, Prec))
plot(Cont)
Money = table(subset(practice, select = c(mortality, Income)))
boxplot(Money)
Money
Heart.data = read.csv("Heart_data.csv", header = TRUE)
boxplot(practice$mortality, practice$Income)
practice
practice2
practice[practice$Income == "High"] = 1
practice[Income][practice$Income == "High"] = 1
practice["Income"][practice$Income == "High"] = 1
practice["Income"][practice["Income"] == "High"] = 1
practice["Income"][practice["Income"] == "Low"] = 0
practice
Money = table(subset(practice, select = c(mortality, Income)))
boxplot(Money)
Money
Money = subset(practice, select = c(mortality, Income)))
Money = subset(practice, select = c(mortality, Income))
boxplot(Money)
Money
boxplot(Money)
boxplot(practice$mortality, practice$Income)
boxplot(Mortality ~ Income)
boxplot(mortality ~ Income)
boxplot(mortality ~ Income, data = practice)
plot(Cont)
View(CaulifData)
gc()
gc()
practice2_clean = outliers(practice2)
outliers = function (data) {
Q1 = quantile (data, 0.25)
Q3 = quantile (data, 0.75)
IQR = IQR (data)
return (subset (data, data >= (Q1 - 1.5*IQR) & data <= (Q3 + 1.5*IQR)))
}
practice2_clean = outliers(practice2)
Sulfur
summary(practice)
summary(practice)
summary(practice[,-1])
summary(practice)
as.data.frame(summary(practice))
as.data.frame(sapply(practice, function(x) sd(x)))
sapply(practice, function(x) sd(x)))
sapply(practice, function(x) sd(x))
summary(practice)
sapply(practice, function(x) sd(x))
View(practice)
summary(practice2[,3])
summary(practice2[0,3])
summary(practice2[,-4])
summary(practice2[,-5])
summary(practice2[1,4])
summary(practice2[,-5])
sapply(practice2, function(x) sd(x))
summary(practice2[,-5])
sapply(practice2, function(x) sd(x))
View(practice2)
practice["Income"][practice["Income"] == "High"] = 1
practice["Income"][practice["Income"] == "Low"] = 0
practice2 = practice
practice2$Nox = log(practice2$Nox)
summary(practice2[,-5])
sapply(practice2, function(x) sd(x))
summary(practice2)
summarise(practice2)
summarize(practice2)
summarise(practice2)
calcularResumenVariablesDiscretas(practice2[,5])
summarise(practice2, Income)
summary(practice2, Income)
library(doBy)
install.packages(doBy)
library(ggplot2)
test = ddply(data, c("Income"), summarise,
mean = mean(Income),
sd   = sd(Income),
)
library(ddply)
library(plyr)
test = ddply(data, c("Income"), summarise,
mean = mean(Income),
sd   = sd(Income),
)
test = ddply(data, Income, summarise,
mean = mean(Income),
sd   = sd(Income),
)
test = ddply(practice2, Income, summarise,
mean = mean(Income),
sd   = sd(Income),
)
summary(practice2[,-5])
as.data.frame(sapply(practice, function(x) sd(x)))
as.data.frame(summary(practice))
sapply(practice, function(x) sd(x))
View(Data1)
sum(Data1$Item.Weight*Data1$Quantity)
practice = read.table(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/Statistical Modelling/Coursework/PolData.txt",
header = TRUE)
practice = data.frame(practice)
summary(practice[,-5])
sapply(practice, function(x) sd(x))
practice["Income"][practice["Income"] == "High"] = 1
practice["Income"][practice["Income"] == "Low"] = 0
practice2 = practice
practice2$Nox = log(practice2$Nox)
Cont = subset(practice2, select = c(mortality, Nox, Sox, Prec))
plot(Cont)
boxplot(mortality ~ Income, data = practice)
boxplot(Nox ~ Income, data = practice)
boxplot(Sox ~ Income, data = practice)
boxplot(Prec ~ Income, data = practice)
boxplot(mortality ~ Income, data = practice2)
boxplot(Nox ~ Income, data = practice2)
boxplot(Sox ~ Income, data = practice2)
boxplot(Prec ~ Income, data = practice2)
fit = lm(mortality ~ Nox + Sox + Prec, data = practice2)
coef(fit)
par(mfrow=c(2,2))
visreg(fit)
library(visreg)
par(mfrow=c(2,2))
visreg(fit)
summary(fit)
fit = lm(mortality ~ Nox + Sox + Prec + Income, data = practice2)
summary(fit)
practice2$Income = as.factor(practice$Income)
fit = lm(mortality ~ Nox + Sox + Prec + Income, data = practice2)
summary(fit)
str(CaulifData)
str(practice2)
fit0 = lm(mortality ~ 1, data = practice2)
anova(fit0, fit)
library(car)
influenceIndexPlot(fit, id.n=2)
warnings()
influenceIndexPlot(fit)
influenceIndexPlot(fit)
View(practice2)
influenceIndexPlot(fit, id.no = 5)
influenceIndexPlot(fit, id.no = 4)
View(practice)
summary(influenceIndexPlot(fit))
data = read.csv(file = "/Users/ewen/Desktop/Uni stuff/UNM/YEAR 2-2/Statistical Modelling/Coursework/MATH2047_ACWdata.csv", header = TRUE)
setwd(/Users/ewen/Desktop/GitTest)
setwd(Users/ewen/Desktop/GitTest)
setwd("~/Desktop/Uni stuff/UNM/Code/R")
setwd("/Users/ewen/Desktop/GitTest")
